// Generated by CoffeeScript 1.6.2
var LoginAction, loginaction;

LoginAction = (function() {
  function LoginAction() {
    this.init();
  }

  LoginAction.prototype.init = function() {
    var _this = this;

    this.notice = $("#login .login_notice");
    this.notice.css({
      "opacity": 0,
      "transition": "all 0.8s ease-out 0.5s",
      "-moz-transition": "all 0.8s ease-out 0.5s",
      "-webkit-transition": "all 0.8s ease-out 0.5s"
    });
    this.login_button = $("#login-submit");
    this.login_form = $("#login-form");
    this.login_url = "/user/login";
    this.email = $("#email input");
    this.password = $("#password input");
    return this.login_button.click(function(e) {
      e.preventDefault();
      _this.disableButton();
      return _this.loginProgress();
    });
  };

  LoginAction.prototype.disableButton = function() {
    var button, doing_text, old_text;

    button = this.login_button;
    button.attr("disabled", "disabled");
    old_text = button.text();
    doing_text = button.data('doing');
    button.data('doing', old_text);
    return button.text(doing_text);
  };

  LoginAction.prototype.showNotice = function(text) {
    var notice;

    notice = this.notice;
    if (notice.css("visibility") === "visible") {
      return;
    }
    notice.text(text);
    notice.css("visibility", "visible");
    return notice.css("opacity", 1);
  };

  LoginAction.prototype.hideNotice = function() {
    var notice;

    notice = this.notice;
    if (notice.css("visibility") === "hidden") {
      return;
    }
    notice.css("visibility", "hidden");
    return notice.css("opacity", 0);
  };

  LoginAction.prototype.enableButton = function() {
    var button, doing_text, old_text;

    button = this.login_button;
    old_text = button.text();
    doing_text = button.data('doing');
    button.data('doing', old_text);
    button.text(doing_text);
    return button.removeAttr("disabled");
  };

  LoginAction.prototype.loginProgress = function() {
    var data, form, url,
      _this = this;

    form = $(this.login_form);
    data = form.serialize();
    url = this.login_url;
    if (this.simpleDatacheck()) {
      return this.loginRequest(url, "post", data, function(result) {
        if (parseInt(result.error_code) !== 1) {
          if (parseInt(result.error_code) === 109) {
            _this.showNotice(result.error_info);
            return setTimeout((function() {
              return _this.redirectPath(result.refer_path);
            }), 1600);
          } else if (parseInt(result.error_code) === 107) {
            _this.showNotice(result.error_info);
            _this.enableButton();
            return _this.email.focus();
          } else if (parseInt(result.error_code) === 108) {
            _this.showNotice(result.error_info);
            _this.enableButton();
            return _this.password.focus();
          } else if (parseInt(result.error_code) === 100) {
            _this.showNotice(result.error_info);
            _this.enableButton();
            return _this.email.focus();
          }
        } else {
          _this.showNotice(result.error_info);
          return setTimeout((function() {
            return _this.redirectPath(result.refer_path);
          }), 1600);
        }
      });
    }
  };

  LoginAction.prototype.simpleDatacheck = function() {
    var email, email_reg, password;

    email = this.email.val();
    password = this.password.val();
    email_reg = /^([a-zA-Z0-9]+[_|\_|\.]?)*[a-zA-Z0-9]+@([a-zA-Z0-9]+[_|\_|\.]?)*[a-zA-Z0-9]+\.[a-zA-Z]{2,3}$/;
    if (email === "") {
      this.notice.text("Please fill email");
      this.email.focus();
      this.enableButton();
      return false;
    } else if (!email_reg.test(email)) {
      this.notice.text("Please correct format email");
      this.email.focus();
      this.enableButton();
      return false;
    }
    if (password === "") {
      this.notice.text("Please fill password");
      this.password.focus();
      this.enableButton();
      return false;
    }
    return true;
  };

  LoginAction.prototype.loginRequest = function(url, type, data, callback) {
    return $.ajax({
      url: url,
      type: type,
      data: data,
      dataType: "json",
      success: function(result) {
        if (callback) {
          return callback(result);
        }
      }
    });
  };

  LoginAction.prototype.redirectPath = function(path) {
    return location.href = path;
  };

  return LoginAction;

})();

loginaction = new LoginAction();
